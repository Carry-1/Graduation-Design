C51 COMPILER V9.59.0.0   MAIN                                                              06/18/2019 11:56:45 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil\C51\BIN\C51.EXE User\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND
                    - PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /********************(C) COPRIGHT 2019 Crownto electronic **************************
   2           * 文件名  ：main.c
   3           * 描述    ：        
   4           * 硬件连接：
   5           * OLED :CS -> P0.3; RST -> P0.1; DC -> P0.2;SCL -> P2.2;SDIN -> P0.0;
   6           *         D0~D7 -> P0口
   7           * 浊度传感器模块: VCC -> 5V; GND -> GND; AO -> P1.2;
   8           *
   9           * 功能描述：测量浊度值液晶显示；
  10                       串口接收测量所得的浊度值（波特率9600）；
  11           *           可连接上位机显示浊度值；
  12           * 作者    ：冠拓电子
  13           * 淘宝    ：https://shop376667309.taobao.com
  14           * 网址    ：www.crownto.cn
  15          **********************************************************************************/
  16          
  17          #include <STC12C5A60S2.h>
  18          #include <intrins.h>
  19          #include "oled.h"
  20          #include "DS18B20.h"
  21          #define uchar unsigned char
  22          #define uint  unsigned int
  23          
  24          #define MAIN_Fosc   11059200L //定义主时钟, 模拟串口和和延时会自动适应。5~35MHZ  22118400L 
  25          
  26          
  27          #define ADC_OFF() ADC_CONTR = 0
  28          #define ADC_ON    (1 << 7)
  29          #define ADC_90T   (3 << 5)
  30          #define ADC_180T  (2 << 5)
  31          #define ADC_360T  (1 << 5)
  32          #define ADC_540T  0
  33          #define ADC_FLAG  (1 << 4)  //软件清0
  34          #define ADC_START (1 << 3)  //自动清0
  35          #define ADC_CH0   0
  36          #define ADC_CH1   1
  37          #define ADC_CH2   2
  38          #define ADC_CH3   3
  39          #define ADC_CH4   4
  40          #define ADC_CH5   5
  41          #define ADC_CH6   6
  42          #define ADC_CH7   7
  43          
  44          /**************变量定义***************************/
  45          float TU=0.0;
  46          float TU_value=0.0;
  47          float TU_calibration=0.0;
  48          unsigned char disbuff[13]={0}; 
  49          float temp_data=0.0;
  50          float K_Value=3047.19;
  51          
  52          //unsigned char disbuff[18]={0}; 
  53          void DelayUs(unsigned int time);   //延时子函数
  54          void Delay1(unsigned int time);    //延时主程序
C51 COMPILER V9.59.0.0   MAIN                                                              06/18/2019 11:56:45 PAGE 2   

  55          void  delay_ms_AD(unsigned char ms);
  56          
  57          uint  adc10_start(uchar channel); //channel = 0~7
  58          unsigned char disbuff1[5] ={0};
  59          uint i;
  60          
  61          void delay_1s()   //延时1s
  62          {
  63   1        unsigned char i, j, k;
  64   1      
  65   1        _nop_();
  66   1        i = 8;
  67   1        j = 1;
  68   1        k = 243;
  69   1        do
  70   1        {
  71   2          do
  72   2          {
  73   3            while (--k);
  74   3          } while (--j);
  75   2        } while (--i);
  76   1      }
  77          /*
  78           * 函数名：Get_Voltage_Value
  79           * 描述  ：获取ADC0809的转换电压值
  80           *         
  81           * 输入  ：无
  82           * 输出  ：无
  83           * 说明  ：
  84           *            AIN0(0X40):热敏电阻
  85           *            AIN1(0X41):悬空
  86           *            AIN2(0X42):滑动变阻器
  87           *            AIN3(0X43):光敏电阻
  88           */
  89          void TU_Value_Conversion()
  90          {
  91   1          
  92   1          TU=(TU*5.0)/1024;
  93   1          TU_calibration=-0.0192*(temp_data/10-25)+TU;  
  94   1          TU_value=-865.68*TU_calibration + K_Value;
  95   1        
  96   1          if(TU_value<=0){TU_value=0;}
  97   1          if(TU_value>=3000){TU_value=3000;}
  98   1      
  99   1          
 100   1          /*显示酸碱度*/
 101   1          disbuff[0]=(int)(TU_value)/1000+'0';
 102   1          disbuff[1]=(int)(TU_value)%1000/100+'0';  
 103   1          disbuff[2]=(int)(TU_value)%100/10+'0';
 104   1          disbuff[3]=(int)(TU_value)%10+'0';
 105   1          
 106   1          OLED_ShowChar(24,2,disbuff[0]);//显示ASCII字符
 107   1          OLED_ShowChar(33,2,disbuff[1]);//显示ASCII字符
 108   1          OLED_ShowChar(42,2,disbuff[2]);//显示ASCII字符
 109   1          OLED_ShowChar(51,2,disbuff[3]);//显示ASCII字符    
 110   1      }
 111          void TEMP_Value_Conversion()
 112          {
 113   1          disbuff[4]=(int)(temp_data)/1000+'0';
 114   1          disbuff[5]=(int)(temp_data)%1000/100+'0'; 
 115   1          disbuff[6]=(int)(temp_data)%100/10+'0';
 116   1          disbuff[7]='.';
C51 COMPILER V9.59.0.0   MAIN                                                              06/18/2019 11:56:45 PAGE 3   

 117   1          disbuff[8]=(int)(temp_data)%10+'0';
 118   1        
 119   1          OLED_ShowChar(24,4,disbuff[4]);//显示ASCII字符
 120   1          OLED_ShowChar(33,4,disbuff[5]);//显示ASCII字符
 121   1          OLED_ShowChar(42,4,disbuff[6]);//显示ASCII字符
 122   1          OLED_ShowChar(51,4,disbuff[7]);//显示ASCII字符  
 123   1          OLED_ShowChar(60,4,disbuff[8]);//显示ASCII字符  
 124   1      
 125   1      }
 126          void StartUART( void )
 127          {               //波特率9600
 128   1           SCON = 0x50;
 129   1           TMOD = 0x20;
 130   1           TH1 = 0xFD;
 131   1           TL1 = 0xFD; 
 132   1           PCON = 0x00;
 133   1           TR1 = 1;
 134   1      }
 135          //**********通过串口将接收到数据发送给PC端**************
 136          void R_S_Byte(uchar R_Byte)
 137          { 
 138   1         SBUF = R_Byte;  
 139   1           while( TI == 0 );        //查询法
 140   1           TI = 0;    
 141   1      }
 142          /*
 143           * 函数名：main
 144           * 描述  ：主函数
 145           * 输入  ：无
 146           * 输出  ：无
 147           */
 148          void main(void)
 149          { 
 150   1        StartUART();
 151   1        OLED_Init();      //初始化OLED  
 152   1        OLED_Clear()    ; 
 153   1        Init_Ds18b20(); 
 154   1      
 155   1        P1ASF = 0x07;     //12C5A60AD/S2系列模拟输入(AD)选择
 156   1        ADC_CONTR = ADC_360T | ADC_ON;
 157   1        OLED_ShowCHinese(0,0,0);
 158   1        OLED_ShowCHinese(18,0,1);
 159   1        OLED_ShowCHinese(36,0,2);
 160   1        OLED_ShowCHinese(54,0,3);
 161   1        OLED_ShowCHinese(72,0,4);
 162   1        OLED_ShowCHinese(90,0,5);
 163   1        OLED_ShowCHinese(108,0,6);
 164   1        OLED_ShowString(0,2,"TU:"); 
 165   1        OLED_ShowString(0,4,"T :");     
 166   1        while(1)
 167   1        {
 168   2            temp_data=Get_temp();
 169   2            TU = adc10_start(2);        
 170   2            TU_Value_Conversion();
 171   2            TEMP_Value_Conversion();
 172   2                for(i=0;i<5;i++)
 173   2              {
 174   3                R_S_Byte(disbuff[i]);
 175   3              } 
 176   2              R_S_Byte('\r');//发送回车换行符
 177   2              R_S_Byte('\n');
 178   2              delay_1s();
C51 COMPILER V9.59.0.0   MAIN                                                              06/18/2019 11:56:45 PAGE 4   

 179   2        }
 180   1      }
 181            
 182          
 183          ///********************* 做一次ADC转换 *******************/
 184          uint  adc10_start(uchar channel)  //channel = 0~7
 185          {
 186   1        uint  adc;
 187   1        uchar i;
 188   1      
 189   1        ADC_RES = 0;
 190   1        ADC_RESL = 0;
 191   1      
 192   1        ADC_CONTR = (ADC_CONTR & 0xe0) | ADC_START | channel; 
 193   1      
 194   1        i = 250;
 195   1        do{
 196   2          if(ADC_CONTR & ADC_FLAG)
 197   2          {
 198   3            ADC_CONTR &= ~ADC_FLAG;
 199   3            adc = (uint)ADC_RES;
 200   3            adc = (adc << 2) | (ADC_RESL & 3);
 201   3            return  adc;
 202   3          }
 203   2        }while(--i);
 204   1        return  1024;
 205   1      }
 206          
 207          //========================================================================
 208          // 函数: void  delay_ms(unsigned char ms)
 209          // 描述: 延时函数。
 210          // 参数: ms,要延时的ms数.
 211          // 返回: none.
 212          // 版本: VER1.0
 213          // 日期: 2010-12-15
 214          // 备注: 
 215          //========================================================================
 216          void  delay_ms_AD(unsigned char ms)
 217          {
 218   1           unsigned int i;
 219   1         do{
 220   2              i = MAIN_Fosc / 14000;
 221   2            while(--i)  ;   //14T per loop
 222   2           }while(--ms);
 223   1      }
 224          
 225          
 226          ////延时函数//
 227          //void Delay1(unsigned int time)
 228          //{
 229          //    unsigned int timeCounter = 0;
 230          //  for (timeCounter = time;timeCounter > 0 ;timeCounter --)
 231          //    DelayUs(255);
 232          //}
 233          
 234          //void DelayUs(unsigned int time)
 235          //{
 236          //  unsigned int timeCounter = 0;
 237          //  for (timeCounter = 0;timeCounter < time;timeCounter ++)
 238          //    _nop_();
 239          //}
 240          
C51 COMPILER V9.59.0.0   MAIN                                                              06/18/2019 11:56:45 PAGE 5   

 241          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    814    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     40    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
