C51 COMPILER V9.59.0.0   MAIN                                                              06/18/2019 12:07:38 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Program Files (x86)\Keil\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS
                    -(2)

line level    source

   1          /******************** (C) COPRIGHT 2019 Crownto electronic **************************
   2           * 文件名  ：main.c
   3           * 描述    ：        
   4           * 硬件连接：
   5           * ADC0809:OE -> P1.0; EOC -> P1.1; ST -> P1.2;CLK -> P1.3; A -> P1.4; B -> P1.5; C->P1.6;
   6           *         OUT1~OUT8 -> P3口
   7           * LCD1602:RS -> P0.0; RW -> P0.1; E -> P0.2;
   8           *         D0~D7 -> P2口
   9           * 浊度传感器模块: VCC -> 5V; GND -> GND; PO -> IN3;
  10           *
  11           * 实验平台：
  12           *
  13           * 作者    ：冠拓电子
  14           * 淘宝    ：https://shop376667309.taobao.com
  15           * 网址    ：www.crownto.cn
  16          **********************************************************************************/
  17          #include <reg52.h>
  18          #include <adc0809.h>
  19          #include <1602.h>
  20          #include <intrins.h>
  21          #include <math.h>
  22          float TU=0.0;
  23          float TU_value=0.0;
  24          float TU_calibration=0.0;
  25          unsigned char disbuff[13]={0}; 
  26          float temp_data=25.0;
  27          float K_Value=3047.19;
  28          
  29          uint num;
  30          /**************延时1s函数***************/
  31          void Delay_1s()
  32          {
  33   1           unsigned char a,b,c;
  34   1          for(c=167;c>0;c--)
  35   1              for(b=171;b>0;b--)
  36   1                  for(a=16;a>0;a--);
  37   1      }
  38          
  39          /**************PH值采集函数***************/
  40          void TU_Collection()
  41          {
  42   1        Red_0809 () ;
  43   1        TU =num * 5.0 / 256;
  44   1        TU_calibration=-0.0192*(temp_data/10-25)+TU;  
  45   1        TU_value=-865.68*TU_calibration + K_Value;
  46   1        
  47   1        if(TU_value<=0){TU_value=0;}
  48   1        if(TU_value>=3000){TU_value=3000;}
  49   1      }
  50          /**************PH值显示函数***************/
  51          void TU_Display()
  52          {
  53   1         
  54   1        disbuff[0]=(int)(TU_value)/1000+'0';
C51 COMPILER V9.59.0.0   MAIN                                                              06/18/2019 12:07:38 PAGE 2   

  55   1        disbuff[1]=(int)(TU_value)%1000/100+'0';  
  56   1        disbuff[2]=(int)(TU_value)%100/10+'0';
  57   1        disbuff[3]=(int)(TU_value)%10+'0';
  58   1      
  59   1        DisplaySingleChar(0x3,1,disbuff[0]);
  60   1        DisplaySingleChar(0x4,1,disbuff[1]);
  61   1        DisplaySingleChar(0x5,1,disbuff[2]);
  62   1        DisplaySingleChar(0x6,1,disbuff[3]);
  63   1        DisplaySingleChar(0x7,1,disbuff[4]);
  64   1      } 
  65          
  66          /**************主函数***************/
  67          void main()
  68          {   
  69   1        TMOD = 0x02; //中断初始化，adc0809产生时钟信号
  70   1        TH0  = 0x14;
  71   1        TL0  = 0x00;
  72   1        IE   = 0x82;
  73   1        TR0  = 1;
  74   1        P1   = 0x3f;
  75   1        LCDInit();   //LCD初始化
  76   1        DisplayString(0x0,0,"  Welcome  TU   ");
  77   1        DisplayString(0x0,1,"Detection system");
  78   1        Delay_1s();
  79   1        WriteCmd(LCD_CLS);     //清屏
  80   1        
  81   1        DisplaySingleChar(0x0,1,'T');
  82   1        DisplaySingleChar(0x1,1,'U');
  83   1        DisplaySingleChar(0x2,1,'=');
  84   1        DisplaySingleChar(0x8,1,'p');
  85   1        DisplaySingleChar(0x9,1,'p');
  86   1        DisplaySingleChar(0x0A,1,'m');
  87   1        
  88   1        while(1)
  89   1        {
  90   2            TU_Collection();
  91   2            TU_Display();
  92   2        }
  93   1      }
  94          
  95          void Timer0_INT() interrupt 1
  96          {
  97   1        CLK = !CLK;
  98   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    519    ----
   CONSTANT SIZE    =     34    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     35    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
