C51 COMPILER V9.59.0.0   MAIN                                                              06/18/2019 11:50:37 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil\C51\BIN\C51.EXE User\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\User) DEB
                    -UG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /********************(C) COPRIGHT 2019 Crownto electronic **************************
   2           * 文件名  ：main.c
   3           * 描述    ：        
   4           * 硬件连接：
   5           * LCD1602:RS -> P2.0; RW -> P2.1; E -> P2.2;
   6           *         D0~D7 -> P0口
   7           * 浊度模块: VCC -> 5V; GND -> GND; AO -> P1.2;
   8           * 按键:   key1 -> P2.4; key2 -> P2.5; key3 -> P2.6;
   9           * LED：   LED -> P1.4
  10           * 功能描述：测量TU值液晶显示；
  11                       串口接收测量所得的TU值（波特率9600）；
  12           *           可连接上位机显示TU值；
  13           * 作者    ：冠拓电子
  14           * 淘宝    ：https://shop376667309.taobao.com
  15           * 网址    ：www.crownto.cn
  16          **********************************************************************************/
  17          #include <STC12C5A60S2.h>
  18          #include <intrins.h>
  19          #include <lcd.h>
  20          #include "DS18B20.h"
  21          
  22          
  23          #define uchar unsigned char
  24          #define uint  unsigned int
  25          
  26          #define MAIN_Fosc   11059200L //定义主时钟, 模拟串口和和延时会自动适应。5~35MHZ  22118400L 
  27           
  28          #define ADC_OFF() ADC_CONTR = 0
  29          #define ADC_ON    (1 << 7)
  30          #define ADC_90T   (3 << 5)
  31          #define ADC_180T  (2 << 5)
  32          #define ADC_360T  (1 << 5)
  33          #define ADC_540T  0
  34          #define ADC_FLAG  (1 << 4)  //软件清0
  35          #define ADC_START (1 << 3)  //自动清0
  36          #define ADC_CH0   0
  37          #define ADC_CH1   1
  38          #define ADC_CH2   2
  39          #define ADC_CH3   3
  40          #define ADC_CH4   4
  41          #define ADC_CH5   5
  42          #define ADC_CH6   6
  43          #define ADC_CH7   7
  44          
  45          sbit k1 = P2^4;
  46          sbit k2 = P2^5;
  47          sbit k3 = P2^6;
  48          sbit ph_led = P1^4;
  49          
  50          
  51          /**************变量定义***************************/
  52          float TU=0.0;
  53          float TU_value=0.0;
  54          float TU_calibration=0.0;
C51 COMPILER V9.59.0.0   MAIN                                                              06/18/2019 11:50:37 PAGE 2   

  55          unsigned char disbuff[13]={0}; 
  56          float temp_data=0.0;
  57          float K_Value=3047.19;
  58          
  59          
  60          void  DelayUs(unsigned int time);   //延时子函数
  61          void  Delay1(unsigned int time);     //延时主程序
  62          uint  adc10_start(uchar channel); //channel = 0~7
  63          int s1;
  64          
  65          
  66          /*
  67           * 函数名：PH_Value_Conversion
  68           * 描述  ：获取TU模块输出电压值
  69           *         
  70           * 输入  ：无
  71           * 输出  ：无
  72           * 说明  ：
  73           */
  74          void TU_Value_Conversion()
  75          {
  76   1          TU=(TU*5.0)/1024;
  77   1          TU_calibration=-0.0192*(temp_data/10-25)+TU;  
  78   1          TU_value=-865.68*TU_calibration + K_Value;
  79   1        
  80   1          if(TU_value<=0){TU_value=0;}
  81   1          if(TU_value>=3000){TU_value=3000;}
  82   1      
  83   1          
  84   1          /*显示酸碱度*/
  85   1          disbuff[0]=(int)(TU_value)/1000+'0';
  86   1          disbuff[1]=(int)(TU_value)%1000/100+'0';  
  87   1          disbuff[2]=(int)(TU_value)%100/10+'0';
  88   1          disbuff[3]=(int)(TU_value)%10+'0';
  89   1          
  90   1          DisplaySingleChar(0x03,0,disbuff[0]);
  91   1          DisplaySingleChar(0x04,0,disbuff[1]);
  92   1          DisplaySingleChar(0x05,0,disbuff[2]);
  93   1          DisplaySingleChar(0x06,0,disbuff[3]);   
  94   1      }
  95          void TEMP_Value_Conversion()
  96          {
  97   1          disbuff[4]=(int)(temp_data)/1000+'0';
  98   1          disbuff[5]=(int)(temp_data)%1000/100+'0'; 
  99   1          disbuff[6]=(int)(temp_data)%100/10+'0';
 100   1          disbuff[7]='.';
 101   1          disbuff[8]=(int)(temp_data)%10+'0';
 102   1      
 103   1          DisplaySingleChar(0x03,1,disbuff[4]);
 104   1          DisplaySingleChar(0x04,1,disbuff[5]);
 105   1          DisplaySingleChar(0x05,1,disbuff[6]);
 106   1          DisplaySingleChar(0x06,1,disbuff[7]);
 107   1          DisplaySingleChar(0x07,1,disbuff[8]); 
 108   1      }
 109          /*
 110           * 函数名：PH_Value_Conversion
 111           * 描述  ：获取TU模块输出电压值
 112           *         
 113           * 输入  ：无
 114           * 输出  ：无
 115           * 说明  ：
 116           */
C51 COMPILER V9.59.0.0   MAIN                                                              06/18/2019 11:50:37 PAGE 3   

 117          /*
 118           * 函数名：main
 119           * 描述  ：主函数
 120           * 输入  ：无
 121           * 输出  ：无
 122           */
 123          void main(void)
 124          {
 125   1         
 126   1        LCDInit(); //显示屏初始化
 127   1        Init_Ds18b20(); 
 128   1        DisplayString(0x0,0,"  Welcome...  ");
 129   1        DisplayString(0x0,1,"water quality");
 130   1        Delay1(500);
 131   1        WriteCmd(LCD_CLS);
 132   1        P1ASF = 0x07;     //12C5A60AD/S2系列模拟输入(AD)选择
 133   1        ADC_CONTR = ADC_360T | ADC_ON;
 134   1        DisplayString(0x0,0,"TU:");
 135   1        DisplayString(0x0,1,"T:");
 136   1        DisplaySingleChar(0x08,0,'p');
 137   1        DisplaySingleChar(0x09,0,'p');
 138   1        DisplaySingleChar(0x0A,0,'m');
 139   1        while(1)
 140   1        {
 141   2          temp_data=Get_temp();
 142   2          //TU采集转换
 143   2          TU = adc10_start(2);
 144   2          Delay1(1000);   
 145   2          TU_Value_Conversion();
 146   2          TEMP_Value_Conversion();
 147   2                  
 148   2        }
 149   1      }
 150            
 151          
 152          ///********************* 做一次ADC转换 *******************/
 153          uint  adc10_start(uchar channel)  //channel = 0~7
 154          {
 155   1        uint  adc;
 156   1        uchar i;
 157   1      
 158   1        ADC_RES = 0;
 159   1        ADC_RESL = 0;
 160   1      
 161   1        ADC_CONTR = (ADC_CONTR & 0xe0) | ADC_START | channel; 
 162   1      
 163   1        i = 250;
 164   1        do{
 165   2          if(ADC_CONTR & ADC_FLAG)
 166   2          {
 167   3            ADC_CONTR &= ~ADC_FLAG;
 168   3            adc = (uint)ADC_RES;
 169   3            adc = (adc << 2) | (ADC_RESL & 3);
 170   3            return  adc;
 171   3          }
 172   2        }while(--i);
 173   1        return  1024;
 174   1      }
 175          
 176          
 177          //========================================================================
 178          //延时函数//
C51 COMPILER V9.59.0.0   MAIN                                                              06/18/2019 11:50:37 PAGE 4   

 179          void Delay1(unsigned int time)
 180          {
 181   1          unsigned int timeCounter = 0;
 182   1        for (timeCounter = time;timeCounter > 0 ;timeCounter --)
 183   1          DelayUs(255);
 184   1      }
 185          
 186          void DelayUs(unsigned int time)
 187          {
 188   1        unsigned int timeCounter = 0;
 189   1        for (timeCounter = 0;timeCounter < time;timeCounter ++)
 190   1          _nop_();
 191   1      }
 192          
 193          
 194          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    979    ----
   CONSTANT SIZE    =     36    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     35      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
